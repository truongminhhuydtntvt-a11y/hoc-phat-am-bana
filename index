<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Luyện phát âm tiếng Bana</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      max-width: 700px;
      margin: 20px auto;
      text-align: center;
      background: #f0f8ff;
    }
    h1 { color: #006699; }
    button {
      padding: 10px 18px;
      margin: 6px;
      border-radius: 8px;
      border: none;
      background-color: #3399ff;
      color: white;
      cursor: pointer;
      font-size: 16px;
    }
    button:disabled { background: #aaa; cursor: not-allowed; }
    .result { font-size: 26px; margin-top: 20px; font-weight: bold; }
    .feedback { font-size: 20px; color: green; margin-top: 10px; }
    .conf { font-size: 16px; color: gray; }
  </style>
</head>
<body>
  <h1>Ứng dụng luyện phát âm tiếng Bana</h1>
  <p>Bấm <b>Start</b> để nạp mô hình, sau đó <b>Bắt đầu nghe</b> và phát âm.</p>

  <button id="startBtn">Start (Nạp mô hình)</button>
  <button id="listenBtn" disabled>Bắt đầu nghe</button>
  <button id="stopBtn" disabled>Dừng nghe</button>

  <div class="result" id="prediction">👉 Chưa nhận âm thanh</div>
  <div class="conf" id="confidence"></div>
  <div class="feedback" id="feedback"></div>

  <!-- TensorFlow.js & Teachable Machine -->
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest"></script>
  <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/sound@0.8/dist/teachablemachine-sound.min.js"></script>

  <script>
    // 🔴 Thay link này bằng link model của bạn
    const MODEL_URL = "https://teachablemachine.withgoogle.com/models/XXXX/";

    let model, maxPredictions;

    async function loadModel() {
      const checkpointURL = MODEL_URL + "model.json";
      const metadataURL = MODEL_URL + "metadata.json";
      model = await tmSound.create(checkpointURL, metadataURL);
      maxPredictions = model.getClassLabels().length;

      document.getElementById("prediction").innerText = "✅ Model đã nạp thành công!";
      document.getElementById("listenBtn").disabled = false;
    }

    async function startListening() {
      if (!model) return;
      document.getElementById("listenBtn").disabled = true;
      document.getElementById("stopBtn").disabled = false;

      await model.listen(result => {
        let maxIndex = 0;
        for (let i = 1; i < result.scores.length; i++) {
          if (result.scores[i] > result.scores[maxIndex]) {
            maxIndex = i;
          }
        }
        const label = result.classLabels[maxIndex];
        const confidence = result.scores[maxIndex];

        document.getElementById("prediction").innerText = "Bạn vừa phát âm: " + label;
        document.getElementById("confidence").innerText = "Độ tin cậy: " + (confidence * 100).toFixed(1) + "%";

        // 🔹 Phản hồi đơn giản
        if (confidence > 0.7) {
          document.getElementById("feedback").innerText = "🌟 Phát âm tốt lắm!";
        } else {
          document.getElementById("feedback").innerText = "Hãy thử phát âm lại rõ hơn.";
        }
      }, { probabilityThreshold: 0.1 });
    }

    function stopListening() {
      if (model) model.stopListening();
      document.getElementById("listenBtn").disabled = false;
      document.getElementById("stopBtn").disabled = true;
      document.getElementById("feedback").innerText = "";
    }

    document.getElementById("startBtn").onclick = loadModel;
    document.getElementById("listenBtn").onclick = startListening;
    document.getElementById("stopBtn").onclick = stopListening;
  </script>
</body>
</html>
